{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.rec_type,'policy')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Not rec type",
							"description": "it is not policy",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "it is not policy",
								"errorCode": "101"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Notebook2",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/trail"
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "send email",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Notebook2').output.exitValue, 'completed')\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "send email",
							"description": "send email failure ",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "email failure",
								"value": "validation failed"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "send email success",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "send email",
								"value": "success"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"rec_type": {
				"type": "string",
				"defaultValue": "policy"
			}
		},
		"variables": {
			"run": {
				"type": "String"
			},
			"send email": {
				"type": "String"
			},
			"email failure": {
				"type": "String"
			}
		},
		"annotations": []
	}
}